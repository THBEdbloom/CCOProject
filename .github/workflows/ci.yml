name: Build, Analyze with PMD and SonarCloud, Dockerize and Push to DockerHub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Test_12345!?  
          MYSQL_DATABASE: videothek
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h 127.0.0.1 -u root -pTest_12345!? -e "SHOW TABLES IN videothek"; do
            echo "Waiting for MySQL..."
            sleep 30
          done

      - name: Set environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/videothek" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=root" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=Test_12345!?" >> $GITHUB_ENV

      - name: Run PMD Analysis
        run: |
          mvn pmd:pmd pmd:cpd
          
      - name: Upload PMD Report
        uses: actions/upload-artifact@v3
        with:
          name: pmd-report
          path: |
            target/pmd.xml
            target/cpd.xml
            target/pmd//*
            target/reports//*

      - name: Build with Maven and Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean install -DskipTests
          mvn verify \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=THBEdbloom_CCOProject \
            -Dsonar.organization=thbedbloom \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build Docker image for app
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker build . --file Dockerfile --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:app

      - name: Push Docker image for app
        run: |
          docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:app
