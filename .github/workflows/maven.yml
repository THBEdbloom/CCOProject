# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Test_12345!?
          MYSQL_DATABASE: videothek
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Wait for MySQL to be ready
      run: sleep 30

    # MySQL-Verbindung überprüfen und Tabellen auflisten
    - name: Check MySQL connection and list tables
      run: |
        mysql -h 127.0.0.1 -u root -p$MYSQL_ROOT_PASSWORD -e "SHOW TABLES IN videothek;" || \
        mysql -h 127.0.0.1 -u root -pTest_12345!? -e "SHOW TABLES IN videothek;"  # Wenn das Passwort nicht gesetzt ist, manuell festlegen
        
    # Schritt zum Setzen von Umgebungsvariablen für Spring
    - name: Set environment variables for Spring
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/videothek" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=root" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=Test_12345!?" >> $GITHUB_ENV

    # Build mit Maven und den entsprechenden Profilen
    - name: Build with Maven
      run: mvn -B clean install -Dspring.profiles.active=test

